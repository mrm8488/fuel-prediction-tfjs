{"id":"g+2L","dependencies":[{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/package.json","includedInParent":true,"mtime":1570206157719},{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/package.json","includedInParent":true,"mtime":1570206157339}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.bitOrDocs=void 0;var t={name:\"bitOr\",category:\"Bitwise\",syntax:[\"x | y\",\"bitOr(x, y)\"],description:\"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.\",examples:[\"5 | 3\",\"bitOr([1, 2, 3], 4)\"],seealso:[\"bitAnd\",\"bitNot\",\"bitXor\",\"leftShift\",\"rightArithShift\",\"rightLogShift\"]};exports.bitOrDocs=t;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":0}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":35}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":43}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":56}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":57}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":64}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":68}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":76}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":91}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":93}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","name":"bitOrDocs","original":{"line":1,"column":11},"generated":{"line":1,"column":97}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":23},"generated":{"line":1,"column":99}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","name":"name","original":{"line":2,"column":2},"generated":{"line":1,"column":100}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":2,"column":8},"generated":{"line":1,"column":105}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","name":"category","original":{"line":3,"column":2},"generated":{"line":1,"column":113}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":3,"column":12},"generated":{"line":1,"column":122}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","name":"syntax","original":{"line":4,"column":2},"generated":{"line":1,"column":132}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":10},"generated":{"line":1,"column":139}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":11},"generated":{"line":1,"column":140}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":20},"generated":{"line":1,"column":148}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","name":"description","original":{"line":5,"column":2},"generated":{"line":1,"column":163}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":5,"column":15},"generated":{"line":1,"column":175}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","name":"examples","original":{"line":6,"column":2},"generated":{"line":1,"column":429}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":12},"generated":{"line":1,"column":438}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":13},"generated":{"line":1,"column":439}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":22},"generated":{"line":1,"column":447}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","name":"seealso","original":{"line":7,"column":2},"generated":{"line":1,"column":470}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":11},"generated":{"line":1,"column":478}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":12},"generated":{"line":1,"column":479}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":22},"generated":{"line":1,"column":488}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":32},"generated":{"line":1,"column":497}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":42},"generated":{"line":1,"column":506}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":55},"generated":{"line":1,"column":518}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":74},"generated":{"line":1,"column":536}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":554}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":562}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7},"generated":{"line":1,"column":572}}],"sources":{"node_modules/mathjs/es/expression/embeddedDocs/function/bitwise/bitOr.js":"export var bitOrDocs = {\n  name: 'bitOr',\n  category: 'Bitwise',\n  syntax: ['x | y', 'bitOr(x, y)'],\n  description: 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',\n  examples: ['5 | 3', 'bitOr([1, 2, 3], 4)'],\n  seealso: ['bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']\n};"},"lineCount":null}},"error":null,"hash":"347b597a318e418ff3c0efea11ae485b","cacheData":{"env":{}}}