{"id":"NkqT","dependencies":[{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/package.json","includedInParent":true,"mtime":1570206157719},{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/package.json","includedInParent":true,"mtime":1570206157339},{"name":"../utils/factory","loc":{"line":1,"column":24},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/expression/Parser.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/factory.js"},{"name":"../utils/object","loc":{"line":2,"column":39},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/expression/Parser.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/object.js"},{"name":"../utils/customs","loc":{"line":3,"column":49},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/expression/Parser.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/customs.js"},{"name":"../utils/log","loc":{"line":4,"column":25},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/expression/Parser.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/log.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createParserClass=void 0;var e=require(\"../utils/factory\"),t=require(\"../utils/object\"),r=require(\"../utils/customs\"),o=require(\"../utils/log\"),s=\"Parser\",a=[\"parse\"],p=(0,e.factory)(s,a,function(e){var s=e.parse;function a(){if(!(this instanceof a))throw new SyntaxError(\"Constructor must be called with the new operator\");this.scope={}}return a.prototype.type=\"Parser\",a.prototype.isParser=!0,a.prototype.parse=function(e){throw new Error(\"Parser.parse is deprecated. Use math.parse instead.\")},a.prototype.compile=function(e){throw new Error(\"Parser.compile is deprecated. Use math.compile instead.\")},a.prototype.evaluate=function(e){return s(e).compile().evaluate(this.scope)},a.prototype.eval=function(e){return(0,o.warnOnce)(\"Method Parser.eval is renamed to Parser.evaluate. Please use the new method name.\"),this.evaluate(e)},a.prototype.get=function(e){return e in this.scope?(0,r.getSafeProperty)(this.scope,e):void 0},a.prototype.getAll=function(){return(0,t.extend)({},this.scope)},a.prototype.set=function(e,t){return(0,r.setSafeProperty)(this.scope,e,t)},a.prototype.remove=function(e){delete this.scope[e]},a.prototype.clear=function(){for(var e in this.scope)(0,t.hasOwnProperty)(this.scope,e)&&delete this.scope[e]},a},{isClass:!0});exports.createParserClass=p;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":0}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":35}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":43}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":56}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":57}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":64}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":68}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":76}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":99}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":105}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":115}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":2,"column":0},"generated":{"line":1,"column":135}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":2,"column":0},"generated":{"line":1,"column":137}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":2,"column":0},"generated":{"line":1,"column":145}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":3,"column":0},"generated":{"line":1,"column":164}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":3,"column":0},"generated":{"line":1,"column":166}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":3,"column":0},"generated":{"line":1,"column":174}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":4,"column":0},"generated":{"line":1,"column":194}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":4,"column":0},"generated":{"line":1,"column":196}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":4,"column":0},"generated":{"line":1,"column":204}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":5,"column":4},"generated":{"line":1,"column":220}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":11},"generated":{"line":1,"column":222}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"dependencies","original":{"line":6,"column":4},"generated":{"line":1,"column":231}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":19},"generated":{"line":1,"column":233}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":20},"generated":{"line":1,"column":234}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"createParserClass","original":{"line":7,"column":11},"generated":{"line":1,"column":243}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":0},"generated":{"line":1,"column":246}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":9,"column":8},"generated":{"line":1,"column":248}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":9,"column":8},"generated":{"line":1,"column":250}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":9,"column":8},"generated":{"line":1,"column":259}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"dependencies","original":{"line":9,"column":14},"generated":{"line":1,"column":261}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":28},"generated":{"line":1,"column":263}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"_ref","original":{"line":9,"column":38},"generated":{"line":1,"column":272}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"parse","original":{"line":10,"column":6},"generated":{"line":1,"column":275}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"parse","original":{"line":10,"column":6},"generated":{"line":1,"column":279}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"_ref","original":{"line":10,"column":14},"generated":{"line":1,"column":281}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"parse","original":{"line":10,"column":19},"generated":{"line":1,"column":283}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":60,"column":11},"generated":{"line":1,"column":289}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":60,"column":11},"generated":{"line":1,"column":298}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":61,"column":8},"generated":{"line":1,"column":302}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":61,"column":10},"generated":{"line":1,"column":307}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":61,"column":26},"generated":{"line":1,"column":323}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":12},"generated":{"line":1,"column":326}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":12},"generated":{"line":1,"column":332}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"SyntaxError","original":{"line":62,"column":16},"generated":{"line":1,"column":336}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":28},"generated":{"line":1,"column":348}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":65,"column":9},"generated":{"line":1,"column":400}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":65,"column":9},"generated":{"line":1,"column":405}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":65,"column":17},"generated":{"line":1,"column":411}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":178,"column":9},"generated":{"line":1,"column":414}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":72,"column":2},"generated":{"line":1,"column":421}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":72,"column":9},"generated":{"line":1,"column":423}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"type","original":{"line":72,"column":19},"generated":{"line":1,"column":433}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":26},"generated":{"line":1,"column":438}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":73,"column":2},"generated":{"line":1,"column":447}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":73,"column":9},"generated":{"line":1,"column":449}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"isParser","original":{"line":73,"column":19},"generated":{"line":1,"column":459}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":30},"generated":{"line":1,"column":469}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":83,"column":2},"generated":{"line":1,"column":471}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":83,"column":9},"generated":{"line":1,"column":473}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"parse","original":{"line":83,"column":19},"generated":{"line":1,"column":483}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":27},"generated":{"line":1,"column":489}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"expr","original":{"line":83,"column":37},"generated":{"line":1,"column":498}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":10},"generated":{"line":1,"column":501}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":10},"generated":{"line":1,"column":507}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Error","original":{"line":84,"column":14},"generated":{"line":1,"column":511}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":20},"generated":{"line":1,"column":517}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":95,"column":2},"generated":{"line":1,"column":573}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":95,"column":9},"generated":{"line":1,"column":575}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"compile","original":{"line":95,"column":19},"generated":{"line":1,"column":585}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":29},"generated":{"line":1,"column":593}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"expr","original":{"line":95,"column":39},"generated":{"line":1,"column":602}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":10},"generated":{"line":1,"column":605}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":10},"generated":{"line":1,"column":611}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Error","original":{"line":96,"column":14},"generated":{"line":1,"column":615}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":20},"generated":{"line":1,"column":621}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":106,"column":2},"generated":{"line":1,"column":681}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":106,"column":9},"generated":{"line":1,"column":683}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"evaluate","original":{"line":106,"column":19},"generated":{"line":1,"column":693}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":30},"generated":{"line":1,"column":702}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"expr","original":{"line":106,"column":40},"generated":{"line":1,"column":711}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"parse","original":{"line":108,"column":11},"generated":{"line":1,"column":714}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"parse","original":{"line":108,"column":11},"generated":{"line":1,"column":721}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"expr","original":{"line":108,"column":17},"generated":{"line":1,"column":723}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"compile","original":{"line":108,"column":23},"generated":{"line":1,"column":726}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"evaluate","original":{"line":108,"column":33},"generated":{"line":1,"column":736}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":42},"generated":{"line":1,"column":745}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":108,"column":47},"generated":{"line":1,"column":750}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":119,"column":2},"generated":{"line":1,"column":758}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":119,"column":9},"generated":{"line":1,"column":760}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"eval","original":{"line":119,"column":19},"generated":{"line":1,"column":770}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":26},"generated":{"line":1,"column":775}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"expr","original":{"line":119,"column":36},"generated":{"line":1,"column":784}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":11},"generated":{"line":1,"column":787}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":13},"generated":{"line":1,"column":794}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":13},"generated":{"line":1,"column":796}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":13},"generated":{"line":1,"column":798}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":13},"generated":{"line":1,"column":808}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":11},"generated":{"line":1,"column":893}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"evaluate","original":{"line":121,"column":16},"generated":{"line":1,"column":898}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"expr","original":{"line":121,"column":25},"generated":{"line":1,"column":907}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":131,"column":2},"generated":{"line":1,"column":911}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":131,"column":9},"generated":{"line":1,"column":913}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"get","original":{"line":131,"column":19},"generated":{"line":1,"column":923}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":25},"generated":{"line":1,"column":927}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":131,"column":35},"generated":{"line":1,"column":936}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":133,"column":11},"generated":{"line":1,"column":939}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":133,"column":11},"generated":{"line":1,"column":946}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":19},"generated":{"line":1,"column":951}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":133,"column":24},"generated":{"line":1,"column":956}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":32},"generated":{"line":1,"column":963}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":48},"generated":{"line":1,"column":965}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":48},"generated":{"line":1,"column":967}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":48},"generated":{"line":1,"column":984}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":133,"column":53},"generated":{"line":1,"column":989}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":133,"column":60},"generated":{"line":1,"column":995}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"undefined","original":{"line":133,"column":68},"generated":{"line":1,"column":1003}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":141,"column":2},"generated":{"line":1,"column":1006}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":141,"column":9},"generated":{"line":1,"column":1008}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"getAll","original":{"line":141,"column":19},"generated":{"line":1,"column":1018}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":28},"generated":{"line":1,"column":1025}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":11},"generated":{"line":1,"column":1036}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":11},"generated":{"line":1,"column":1043}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":18},"generated":{"line":1,"column":1045}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":18},"generated":{"line":1,"column":1047}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":18},"generated":{"line":1,"column":1055}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":22},"generated":{"line":1,"column":1058}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":142,"column":27},"generated":{"line":1,"column":1063}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":151,"column":2},"generated":{"line":1,"column":1071}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":151,"column":9},"generated":{"line":1,"column":1073}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"set","original":{"line":151,"column":19},"generated":{"line":1,"column":1083}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":25},"generated":{"line":1,"column":1087}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":151,"column":35},"generated":{"line":1,"column":1096}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"value","original":{"line":151,"column":41},"generated":{"line":1,"column":1098}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":11},"generated":{"line":1,"column":1101}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":11},"generated":{"line":1,"column":1108}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":27},"generated":{"line":1,"column":1110}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":27},"generated":{"line":1,"column":1112}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":27},"generated":{"line":1,"column":1129}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":153,"column":32},"generated":{"line":1,"column":1134}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":153,"column":39},"generated":{"line":1,"column":1140}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"value","original":{"line":153,"column":45},"generated":{"line":1,"column":1142}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":161,"column":2},"generated":{"line":1,"column":1146}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":161,"column":9},"generated":{"line":1,"column":1148}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"remove","original":{"line":161,"column":19},"generated":{"line":1,"column":1158}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":28},"generated":{"line":1,"column":1165}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":161,"column":38},"generated":{"line":1,"column":1174}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":163,"column":11},"generated":{"line":1,"column":1184}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":163,"column":16},"generated":{"line":1,"column":1189}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"name","original":{"line":163,"column":22},"generated":{"line":1,"column":1195}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":170,"column":2},"generated":{"line":1,"column":1199}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"prototype","original":{"line":170,"column":9},"generated":{"line":1,"column":1201}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"clear","original":{"line":170,"column":19},"generated":{"line":1,"column":1211}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":27},"generated":{"line":1,"column":1217}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":9},"generated":{"line":1,"column":1228}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":9},"generated":{"line":1,"column":1232}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"_name","original":{"line":171,"column":13},"generated":{"line":1,"column":1236}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":22},"generated":{"line":1,"column":1241}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":171,"column":27},"generated":{"line":1,"column":1246}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":10},"generated":{"line":1,"column":1253}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":25},"generated":{"line":1,"column":1255}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":25},"generated":{"line":1,"column":1257}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":25},"generated":{"line":1,"column":1273}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":172,"column":30},"generated":{"line":1,"column":1278}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"_name","original":{"line":172,"column":37},"generated":{"line":1,"column":1284}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":173,"column":15},"generated":{"line":1,"column":1295}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"scope","original":{"line":173,"column":20},"generated":{"line":1,"column":1300}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"_name","original":{"line":173,"column":26},"generated":{"line":1,"column":1306}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"Parser","original":{"line":178,"column":9},"generated":{"line":1,"column":1310}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":179,"column":3},"generated":{"line":1,"column":1313}},{"source":"node_modules/mathjs/es/expression/Parser.js","name":"isClass","original":{"line":180,"column":2},"generated":{"line":1,"column":1314}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":180,"column":11},"generated":{"line":1,"column":1323}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":1327}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":1335}},{"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7},"generated":{"line":1,"column":1353}}],"sources":{"node_modules/mathjs/es/expression/Parser.js":"import { factory } from '../utils/factory';\nimport { extend, hasOwnProperty } from '../utils/object';\nimport { getSafeProperty, setSafeProperty } from '../utils/customs';\nimport { warnOnce } from '../utils/log';\nvar name = 'Parser';\nvar dependencies = ['parse'];\nexport var createParserClass =\n/* #__PURE__ */\nfactory(name, dependencies, function (_ref) {\n  var parse = _ref.parse;\n\n  /**\n   * @constructor Parser\n   * Parser contains methods to evaluate or parse expressions, and has a number\n   * of convenience methods to get, set, and remove variables from memory. Parser\n   * keeps a scope containing variables in memory, which is used for all\n   * evaluations.\n   *\n   * Methods:\n   *    const result = parser.evaluate(expr)  // evaluate an expression\n   *    const value = parser.get(name)        // retrieve a variable from the parser\n   *    const values = parser.getAll()        // retrieve all defined variables\n   *    parser.set(name, value)               // set a variable in the parser\n   *    parser.remove(name)                   // clear a variable from the\n   *                                          // parsers scope\n   *    parser.clear()                        // clear the parsers scope\n   *\n   * Example usage:\n   *    const parser = new Parser()\n   *    // Note: there is a convenience method which can be used instead:\n   *    // const parser = new math.parser()\n   *\n   *    // evaluate expressions\n   *    parser.evaluate('sqrt(3^2 + 4^2)')        // 5\n   *    parser.evaluate('sqrt(-4)')               // 2i\n   *    parser.evaluate('2 inch in cm')           // 5.08 cm\n   *    parser.evaluate('cos(45 deg)')            // 0.7071067811865476\n   *\n   *    // define variables and functions\n   *    parser.evaluate('x = 7 / 2')              // 3.5\n   *    parser.evaluate('x + 3')                  // 6.5\n   *    parser.evaluate('function f(x, y) = x^y') // f(x, y)\n   *    parser.evaluate('f(2, 3)')                // 8\n   *\n   *    // get and set variables and functions\n   *    const x = parser.get('x')                 // 7\n   *    const f = parser.get('f')                 // function\n   *    const g = f(3, 2)                         // 9\n   *    parser.set('h', 500)\n   *    const i = parser.evaluate('h / 2')        // 250\n   *    parser.set('hello', function (name) {\n   *        return 'hello, ' + name + '!'\n   *    })\n   *    parser.evaluate('hello(\"user\")')          // \"hello, user!\"\n   *\n   *    // clear defined functions and variables\n   *    parser.clear()\n   *\n   */\n  function Parser() {\n    if (!(this instanceof Parser)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.scope = {};\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Parser.prototype.type = 'Parser';\n  Parser.prototype.isParser = true;\n  /**\n   * Parse an expression and return the parsed function node.\n   * The node tree can be compiled via `code = node.compile(math)`,\n   * and the compiled code can be executed as `code.evaluate([scope])`\n   * @param {string} expr\n   * @return {Node} node\n   * @throws {Error}\n   */\n\n  Parser.prototype.parse = function (expr) {\n    throw new Error('Parser.parse is deprecated. Use math.parse instead.');\n  };\n  /**\n   * Parse and compile an expression, return the compiled javascript code.\n   * The node can be evaluated via code.evaluate([scope])\n   * @param {string} expr\n   * @return {{evaluate: function}} code\n   * @throws {Error}\n   */\n\n\n  Parser.prototype.compile = function (expr) {\n    throw new Error('Parser.compile is deprecated. Use math.compile instead.');\n  };\n  /**\n   * Parse and evaluate the given expression\n   * @param {string} expr   A string containing an expression, for example \"2+3\"\n   * @return {*} result     The result, or undefined when the expression was empty\n   * @throws {Error}\n   */\n\n\n  Parser.prototype.evaluate = function (expr) {\n    // TODO: validate arguments\n    return parse(expr).compile().evaluate(this.scope);\n  };\n  /**\n   * Parse and evaluate the given expression\n   * @param {string} expr   A string containing an expression, for example \"2+3\"\n   * @return {*} result     The result, or undefined when the expression was empty\n   * @throws {Error}\n   */\n  // TODO: Deprecated since v6.0.0. Clean up some day\n\n\n  Parser.prototype.eval = function (expr) {\n    warnOnce('Method Parser.eval is renamed to Parser.evaluate. Please use the new method name.');\n    return this.evaluate(expr);\n  };\n  /**\n   * Get a variable (a function or variable) by name from the parsers scope.\n   * Returns undefined when not found\n   * @param {string} name\n   * @return {* | undefined} value\n   */\n\n\n  Parser.prototype.get = function (name) {\n    // TODO: validate arguments\n    return name in this.scope ? getSafeProperty(this.scope, name) : undefined;\n  };\n  /**\n   * Get a map with all defined variables\n   * @return {Object} values\n   */\n\n\n  Parser.prototype.getAll = function () {\n    return extend({}, this.scope);\n  };\n  /**\n   * Set a symbol (a function or variable) by name from the parsers scope.\n   * @param {string} name\n   * @param {* | undefined} value\n   */\n\n\n  Parser.prototype.set = function (name, value) {\n    // TODO: validate arguments\n    return setSafeProperty(this.scope, name, value);\n  };\n  /**\n   * Remove a variable from the parsers scope\n   * @param {string} name\n   */\n\n\n  Parser.prototype.remove = function (name) {\n    // TODO: validate arguments\n    delete this.scope[name];\n  };\n  /**\n   * Clear the scope with variables and functions\n   */\n\n\n  Parser.prototype.clear = function () {\n    for (var _name in this.scope) {\n      if (hasOwnProperty(this.scope, _name)) {\n        delete this.scope[_name];\n      }\n    }\n  };\n\n  return Parser;\n}, {\n  isClass: true\n});"},"lineCount":null}},"error":null,"hash":"b1b3b0215a2a671d059e280303fa6e03","cacheData":{"env":{}}}