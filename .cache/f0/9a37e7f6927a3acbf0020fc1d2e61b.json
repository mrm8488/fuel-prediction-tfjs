{"id":"BPWZ","dependencies":[{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/package.json","includedInParent":true,"mtime":1570206157719},{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/package.json","includedInParent":true,"mtime":1570206157339},{"name":"../../utils/factory","loc":{"line":1,"column":24},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/function/statistics/std.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/factory.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createStd=void 0;var r=require(\"../../utils/factory\"),e=\"std\",t=[\"typed\",\"sqrt\",\"variance\"],a=(0,r.factory)(e,t,function(r){var t=r.typed,a=r.sqrt,n=r.variance;return t(e,{\"Array | Matrix\":i,\"Array | Matrix, string\":i,\"Array | Matrix, number | BigNumber\":i,\"Array | Matrix, number | BigNumber, string\":i,\"...\":function(r){return i(r)}});function i(r,e){if(0===r.length)throw new SyntaxError(\"Function std requires one or more parameters (0 provided)\");try{return a(n.apply(null,arguments))}catch(t){throw t instanceof TypeError&&-1!==t.message.indexOf(\" variance\")?new TypeError(t.message.replace(\" variance\",\" std\")):t}}});exports.createStd=a;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":0}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":35}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":43}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":56}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":57}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":64}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":68}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":76}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":91}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":1,"column":0},"generated":{"line":1,"column":93}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"name","original":{"line":2,"column":4},"generated":{"line":1,"column":130}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":2,"column":11},"generated":{"line":1,"column":132}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"dependencies","original":{"line":3,"column":4},"generated":{"line":1,"column":138}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":3,"column":19},"generated":{"line":1,"column":140}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":3,"column":20},"generated":{"line":1,"column":141}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":3,"column":29},"generated":{"line":1,"column":149}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":3,"column":37},"generated":{"line":1,"column":156}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"createStd","original":{"line":4,"column":11},"generated":{"line":1,"column":168}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":6,"column":0},"generated":{"line":1,"column":171}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":173}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":175}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":184}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"dependencies","original":{"line":6,"column":14},"generated":{"line":1,"column":186}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":6,"column":28},"generated":{"line":1,"column":188}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_ref","original":{"line":6,"column":38},"generated":{"line":1,"column":197}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"typed","original":{"line":7,"column":6},"generated":{"line":1,"column":200}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"typed","original":{"line":7,"column":6},"generated":{"line":1,"column":204}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_ref","original":{"line":7,"column":14},"generated":{"line":1,"column":206}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"typed","original":{"line":7,"column":19},"generated":{"line":1,"column":208}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"sqrt","original":{"line":8,"column":6},"generated":{"line":1,"column":214}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_ref","original":{"line":8,"column":13},"generated":{"line":1,"column":216}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"sqrt","original":{"line":8,"column":18},"generated":{"line":1,"column":218}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"variance","original":{"line":9,"column":6},"generated":{"line":1,"column":223}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_ref","original":{"line":9,"column":17},"generated":{"line":1,"column":225}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"variance","original":{"line":9,"column":22},"generated":{"line":1,"column":227}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"typed","original":{"line":63,"column":9},"generated":{"line":1,"column":236}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"typed","original":{"line":63,"column":9},"generated":{"line":1,"column":243}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"name","original":{"line":63,"column":15},"generated":{"line":1,"column":245}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":63,"column":21},"generated":{"line":1,"column":247}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":65,"column":22},"generated":{"line":1,"column":248}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":65,"column":22},"generated":{"line":1,"column":265}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":67,"column":30},"generated":{"line":1,"column":267}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":67,"column":30},"generated":{"line":1,"column":292}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":69,"column":42},"generated":{"line":1,"column":294}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":69,"column":42},"generated":{"line":1,"column":331}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":71,"column":50},"generated":{"line":1,"column":333}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":71,"column":50},"generated":{"line":1,"column":378}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":73,"column":11},"generated":{"line":1,"column":380}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":73,"column":11},"generated":{"line":1,"column":386}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"args","original":{"line":73,"column":22},"generated":{"line":1,"column":395}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":74,"column":13},"generated":{"line":1,"column":398}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":74,"column":13},"generated":{"line":1,"column":405}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"args","original":{"line":74,"column":18},"generated":{"line":1,"column":407}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":78,"column":11},"generated":{"line":1,"column":413}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"_std","original":{"line":78,"column":11},"generated":{"line":1,"column":422}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"array","original":{"line":78,"column":16},"generated":{"line":1,"column":424}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"normalization","original":{"line":78,"column":23},"generated":{"line":1,"column":426}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"array","original":{"line":79,"column":8},"generated":{"line":1,"column":429}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":79,"column":25},"generated":{"line":1,"column":432}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"array","original":{"line":79,"column":8},"generated":{"line":1,"column":436}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"length","original":{"line":79,"column":14},"generated":{"line":1,"column":438}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":80,"column":12},"generated":{"line":1,"column":445}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":80,"column":12},"generated":{"line":1,"column":451}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"SyntaxError","original":{"line":80,"column":16},"generated":{"line":1,"column":455}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":80,"column":28},"generated":{"line":1,"column":467}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":83,"column":8},"generated":{"line":1,"column":528}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"sqrt","original":{"line":84,"column":13},"generated":{"line":1,"column":532}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"sqrt","original":{"line":84,"column":13},"generated":{"line":1,"column":539}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"variance","original":{"line":84,"column":18},"generated":{"line":1,"column":541}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"apply","original":{"line":84,"column":27},"generated":{"line":1,"column":543}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":84,"column":33},"generated":{"line":1,"column":549}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"arguments","original":{"line":84,"column":39},"generated":{"line":1,"column":554}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":85,"column":6},"generated":{"line":1,"column":566}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"err","original":{"line":85,"column":13},"generated":{"line":1,"column":572}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"err","original":{"line":86,"column":10},"generated":{"line":1,"column":575}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"err","original":{"line":86,"column":10},"generated":{"line":1,"column":581}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"TypeError","original":{"line":86,"column":25},"generated":{"line":1,"column":594}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":86,"column":76},"generated":{"line":1,"column":606}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"err","original":{"line":86,"column":38},"generated":{"line":1,"column":610}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"message","original":{"line":86,"column":42},"generated":{"line":1,"column":612}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"indexOf","original":{"line":86,"column":50},"generated":{"line":1,"column":620}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":86,"column":58},"generated":{"line":1,"column":628}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":87,"column":14},"generated":{"line":1,"column":641}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"TypeError","original":{"line":87,"column":18},"generated":{"line":1,"column":645}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"err","original":{"line":87,"column":28},"generated":{"line":1,"column":655}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"message","original":{"line":87,"column":32},"generated":{"line":1,"column":657}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"replace","original":{"line":87,"column":40},"generated":{"line":1,"column":665}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":87,"column":48},"generated":{"line":1,"column":673}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":87,"column":61},"generated":{"line":1,"column":685}},{"source":"node_modules/mathjs/es/function/statistics/std.js","name":"err","original":{"line":89,"column":14},"generated":{"line":1,"column":694}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":700}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":708}},{"source":"node_modules/mathjs/es/function/statistics/std.js","original":{"line":4,"column":7},"generated":{"line":1,"column":718}}],"sources":{"node_modules/mathjs/es/function/statistics/std.js":"import { factory } from '../../utils/factory';\nvar name = 'std';\nvar dependencies = ['typed', 'sqrt', 'variance'];\nexport var createStd =\n/* #__PURE__ */\nfactory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      sqrt = _ref.sqrt,\n      variance = _ref.variance;\n\n  /**\n   * Compute the standard deviation of a matrix or a  list with values.\n   * The standard deviations is defined as the square root of the variance:\n   * `std(A) = sqrt(variance(A))`.\n   * In case of a (multi dimensional) array or matrix, the standard deviation\n   * over all elements will be calculated by default, unless an axis is specified\n   * in which case the standard deviation will be computed along that axis.\n   *\n   * Additionally, it is possible to compute the standard deviation along the rows\n   * or columns of a matrix by specifying the dimension as the second argument.\n   *\n   * Optionally, the type of normalization can be specified as the final\n   * parameter. The parameter `normalization` can be one of the following values:\n   *\n   * - 'unbiased' (default) The sum of squared errors is divided by (n - 1)\n   * - 'uncorrected'        The sum of squared errors is divided by n\n   * - 'biased'             The sum of squared errors is divided by (n + 1)\n   *\n   *\n   * Syntax:\n   *\n   *     math.std(a, b, c, ...)\n   *     math.std(A)\n   *     math.std(A, normalization)\n   *     math.std(A, dimension)\n   *     math.std(A, dimension, normalization)\n   *\n   * Examples:\n   *\n   *     math.std(2, 4, 6)                     // returns 2\n   *     math.std([2, 4, 6, 8])                // returns 2.581988897471611\n   *     math.std([2, 4, 6, 8], 'uncorrected') // returns 2.23606797749979\n   *     math.std([2, 4, 6, 8], 'biased')      // returns 2\n   *\n   *     math.std([[1, 2, 3], [4, 5, 6]])      // returns 1.8708286933869707\n   *     math.std([[1, 2, 3], [4, 6, 8]], 0)    // returns [2.1213203435596424, 2.8284271247461903, 3.5355339059327378]\n   *     math.std([[1, 2, 3], [4, 6, 8]], 1)    // returns [1, 2]\n   *     math.std([[1, 2, 3], [4, 6, 8]], 1, 'biased') // returns [0.7071067811865476, 1.4142135623730951]\n   *\n   * See also:\n   *\n   *    mean, median, max, min, prod, sum, variance\n   *\n   * @param {Array | Matrix} array\n   *                        A single matrix or or multiple scalar values\n   * @param {string} [normalization='unbiased']\n   *                        Determines how to normalize the variance.\n   *                        Choose 'unbiased' (default), 'uncorrected', or 'biased'.\n   * @param dimension {number | BigNumber}\n   *                        Determines the axis to compute the standard deviation for a matrix\n   * @return {*} The standard deviation\n   */\n  return typed(name, {\n    // std([a, b, c, d, ...])\n    'Array | Matrix': _std,\n    // std([a, b, c, d, ...], normalization)\n    'Array | Matrix, string': _std,\n    // std([a, b, c, c, ...], dim)\n    'Array | Matrix, number | BigNumber': _std,\n    // std([a, b, c, c, ...], dim, normalization)\n    'Array | Matrix, number | BigNumber, string': _std,\n    // std(a, b, c, d, ...)\n    '...': function _(args) {\n      return _std(args);\n    }\n  });\n\n  function _std(array, normalization) {\n    if (array.length === 0) {\n      throw new SyntaxError('Function std requires one or more parameters (0 provided)');\n    }\n\n    try {\n      return sqrt(variance.apply(null, arguments));\n    } catch (err) {\n      if (err instanceof TypeError && err.message.indexOf(' variance') !== -1) {\n        throw new TypeError(err.message.replace(' variance', ' std'));\n      } else {\n        throw err;\n      }\n    }\n  }\n});"},"lineCount":null}},"error":null,"hash":"1cc52b048177b2592d41f4354efc5a27","cacheData":{"env":{}}}