{"id":"Mlz+","dependencies":[{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/package.json","includedInParent":true,"mtime":1570206157719},{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/package.json","includedInParent":true,"mtime":1570206157339}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.quantileSeqDocs=void 0;var e={name:\"quantileSeq\",category:\"Statistics\",syntax:[\"quantileSeq(A, prob[, sorted])\",\"quantileSeq(A, [prob1, prob2, ...][, sorted])\",\"quantileSeq(A, N[, sorted])\"],description:\"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \\n\\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.\",examples:[\"quantileSeq([3, -1, 5, 7], 0.5)\",\"quantileSeq([3, -1, 5, 7], [1/3, 2/3])\",\"quantileSeq([3, -1, 5, 7], 2)\",\"quantileSeq([-1, 3, 5, 7], 0.5, true)\"],seealso:[\"mean\",\"median\",\"min\",\"max\",\"prod\",\"std\",\"sum\",\"variance\"]};exports.quantileSeqDocs=e;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":0}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":35}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":43}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":56}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":57}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":64}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":68}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":76}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":97}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":99}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","name":"quantileSeqDocs","original":{"line":1,"column":11},"generated":{"line":1,"column":103}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":29},"generated":{"line":1,"column":105}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","name":"name","original":{"line":2,"column":2},"generated":{"line":1,"column":106}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":2,"column":8},"generated":{"line":1,"column":111}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","name":"category","original":{"line":3,"column":2},"generated":{"line":1,"column":125}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":3,"column":12},"generated":{"line":1,"column":134}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","name":"syntax","original":{"line":4,"column":2},"generated":{"line":1,"column":147}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":4,"column":10},"generated":{"line":1,"column":154}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":4,"column":11},"generated":{"line":1,"column":155}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":4,"column":45},"generated":{"line":1,"column":188}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":4,"column":94},"generated":{"line":1,"column":236}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","name":"description","original":{"line":5,"column":2},"generated":{"line":1,"column":267}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":5,"column":15},"generated":{"line":1,"column":279}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","name":"examples","original":{"line":6,"column":2},"generated":{"line":1,"column":637}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":6,"column":12},"generated":{"line":1,"column":646}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":6,"column":13},"generated":{"line":1,"column":647}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":6,"column":48},"generated":{"line":1,"column":681}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":6,"column":90},"generated":{"line":1,"column":722}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":6,"column":123},"generated":{"line":1,"column":754}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","name":"seealso","original":{"line":7,"column":2},"generated":{"line":1,"column":795}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":11},"generated":{"line":1,"column":803}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":12},"generated":{"line":1,"column":804}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":20},"generated":{"line":1,"column":811}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":30},"generated":{"line":1,"column":820}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":37},"generated":{"line":1,"column":826}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":44},"generated":{"line":1,"column":832}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":52},"generated":{"line":1,"column":839}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":59},"generated":{"line":1,"column":845}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":66},"generated":{"line":1,"column":851}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":864}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":872}},{"source":"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7},"generated":{"line":1,"column":888}}],"sources":{"node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js":"export var quantileSeqDocs = {\n  name: 'quantileSeq',\n  category: 'Statistics',\n  syntax: ['quantileSeq(A, prob[, sorted])', 'quantileSeq(A, [prob1, prob2, ...][, sorted])', 'quantileSeq(A, N[, sorted])'],\n  description: 'Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \\n\\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.',\n  examples: ['quantileSeq([3, -1, 5, 7], 0.5)', 'quantileSeq([3, -1, 5, 7], [1/3, 2/3])', 'quantileSeq([3, -1, 5, 7], 2)', 'quantileSeq([-1, 3, 5, 7], 0.5, true)'],\n  seealso: ['mean', 'median', 'min', 'max', 'prod', 'std', 'sum', 'variance']\n};"},"lineCount":null}},"error":null,"hash":"c54f60e9ecac43245f76d7f0b9b0130d","cacheData":{"env":{}}}