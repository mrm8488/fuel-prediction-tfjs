{"id":"VLkb","dependencies":[{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/package.json","includedInParent":true,"mtime":1570206157719},{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/package.json","includedInParent":true,"mtime":1570206157339},{"name":"../../utils/factory","loc":{"line":1,"column":24},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/type/matrix/Matrix.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/factory.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createMatrixClass=void 0;var t=require(\"../../utils/factory\"),r=\"Matrix\",o=[],n=(0,t.factory)(r,o,function(){function t(){if(!(this instanceof t))throw new SyntaxError(\"Constructor must be called with the new operator\")}return t.prototype.type=\"Matrix\",t.prototype.isMatrix=!0,t.storage=function(t){throw new Error(\"Matrix.storage is deprecated since v6.0.0. Use the factory function math.matrix instead.\")},t.prototype.storage=function(){throw new Error(\"Cannot invoke storage on a Matrix interface\")},t.prototype.datatype=function(){throw new Error(\"Cannot invoke datatype on a Matrix interface\")},t.prototype.create=function(t,r){throw new Error(\"Cannot invoke create on a Matrix interface\")},t.prototype.subset=function(t,r,o){throw new Error(\"Cannot invoke subset on a Matrix interface\")},t.prototype.get=function(t){throw new Error(\"Cannot invoke get on a Matrix interface\")},t.prototype.set=function(t,r,o){throw new Error(\"Cannot invoke set on a Matrix interface\")},t.prototype.resize=function(t,r){throw new Error(\"Cannot invoke resize on a Matrix interface\")},t.prototype.reshape=function(t,r){throw new Error(\"Cannot invoke reshape on a Matrix interface\")},t.prototype.clone=function(){throw new Error(\"Cannot invoke clone on a Matrix interface\")},t.prototype.size=function(){throw new Error(\"Cannot invoke size on a Matrix interface\")},t.prototype.map=function(t,r){throw new Error(\"Cannot invoke map on a Matrix interface\")},t.prototype.forEach=function(t){throw new Error(\"Cannot invoke forEach on a Matrix interface\")},t.prototype.toArray=function(){throw new Error(\"Cannot invoke toArray on a Matrix interface\")},t.prototype.valueOf=function(){throw new Error(\"Cannot invoke valueOf on a Matrix interface\")},t.prototype.format=function(t){throw new Error(\"Cannot invoke format on a Matrix interface\")},t.prototype.toString=function(){throw new Error(\"Cannot invoke toString on a Matrix interface\")},t},{isClass:!0});exports.createMatrixClass=n;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":0}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":35}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":43}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":56}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":57}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":64}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":68}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":76}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":99}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":1,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":1,"column":0},"generated":{"line":1,"column":105}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":1,"column":0},"generated":{"line":1,"column":115}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"name","original":{"line":2,"column":4},"generated":{"line":1,"column":138}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":2,"column":11},"generated":{"line":1,"column":140}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"dependencies","original":{"line":3,"column":4},"generated":{"line":1,"column":149}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":3,"column":19},"generated":{"line":1,"column":151}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"createMatrixClass","original":{"line":4,"column":11},"generated":{"line":1,"column":154}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":6,"column":0},"generated":{"line":1,"column":157}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":159}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":161}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":170}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"dependencies","original":{"line":6,"column":14},"generated":{"line":1,"column":172}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":6,"column":28},"generated":{"line":1,"column":174}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":29,"column":11},"generated":{"line":1,"column":185}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":29,"column":11},"generated":{"line":1,"column":194}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":30,"column":8},"generated":{"line":1,"column":198}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":30,"column":10},"generated":{"line":1,"column":203}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":30,"column":26},"generated":{"line":1,"column":219}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":31,"column":12},"generated":{"line":1,"column":222}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":31,"column":12},"generated":{"line":1,"column":228}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"SyntaxError","original":{"line":31,"column":16},"generated":{"line":1,"column":232}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":31,"column":28},"generated":{"line":1,"column":244}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":262,"column":9},"generated":{"line":1,"column":296}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":39,"column":2},"generated":{"line":1,"column":303}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":39,"column":9},"generated":{"line":1,"column":305}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"type","original":{"line":39,"column":19},"generated":{"line":1,"column":315}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":39,"column":26},"generated":{"line":1,"column":320}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":40,"column":2},"generated":{"line":1,"column":329}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":40,"column":9},"generated":{"line":1,"column":331}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"isMatrix","original":{"line":40,"column":19},"generated":{"line":1,"column":341}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":40,"column":30},"generated":{"line":1,"column":351}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":49,"column":2},"generated":{"line":1,"column":353}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"storage","original":{"line":49,"column":9},"generated":{"line":1,"column":355}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":49,"column":19},"generated":{"line":1,"column":363}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"format","original":{"line":49,"column":29},"generated":{"line":1,"column":372}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":51,"column":10},"generated":{"line":1,"column":375}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":51,"column":10},"generated":{"line":1,"column":381}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":51,"column":14},"generated":{"line":1,"column":385}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":51,"column":20},"generated":{"line":1,"column":391}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":63,"column":2},"generated":{"line":1,"column":484}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":63,"column":9},"generated":{"line":1,"column":486}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"storage","original":{"line":63,"column":19},"generated":{"line":1,"column":496}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":63,"column":29},"generated":{"line":1,"column":504}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":65,"column":10},"generated":{"line":1,"column":515}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":65,"column":10},"generated":{"line":1,"column":521}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":65,"column":14},"generated":{"line":1,"column":525}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":65,"column":20},"generated":{"line":1,"column":531}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":77,"column":2},"generated":{"line":1,"column":579}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":77,"column":9},"generated":{"line":1,"column":581}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"datatype","original":{"line":77,"column":19},"generated":{"line":1,"column":591}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":77,"column":30},"generated":{"line":1,"column":600}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":79,"column":10},"generated":{"line":1,"column":611}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":79,"column":10},"generated":{"line":1,"column":617}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":79,"column":14},"generated":{"line":1,"column":621}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":79,"column":20},"generated":{"line":1,"column":627}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":88,"column":2},"generated":{"line":1,"column":676}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":88,"column":9},"generated":{"line":1,"column":678}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"create","original":{"line":88,"column":19},"generated":{"line":1,"column":688}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":88,"column":28},"generated":{"line":1,"column":695}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"data","original":{"line":88,"column":38},"generated":{"line":1,"column":704}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"datatype","original":{"line":88,"column":44},"generated":{"line":1,"column":706}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":89,"column":10},"generated":{"line":1,"column":709}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":89,"column":10},"generated":{"line":1,"column":715}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":89,"column":14},"generated":{"line":1,"column":719}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":89,"column":20},"generated":{"line":1,"column":725}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":106,"column":2},"generated":{"line":1,"column":772}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":106,"column":9},"generated":{"line":1,"column":774}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"subset","original":{"line":106,"column":19},"generated":{"line":1,"column":784}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":106,"column":28},"generated":{"line":1,"column":791}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"index","original":{"line":106,"column":38},"generated":{"line":1,"column":800}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"replacement","original":{"line":106,"column":45},"generated":{"line":1,"column":802}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"defaultValue","original":{"line":106,"column":58},"generated":{"line":1,"column":804}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":108,"column":10},"generated":{"line":1,"column":807}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":108,"column":10},"generated":{"line":1,"column":813}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":108,"column":14},"generated":{"line":1,"column":817}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":108,"column":20},"generated":{"line":1,"column":823}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":117,"column":2},"generated":{"line":1,"column":870}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":117,"column":9},"generated":{"line":1,"column":872}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"get","original":{"line":117,"column":19},"generated":{"line":1,"column":882}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":117,"column":25},"generated":{"line":1,"column":886}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"index","original":{"line":117,"column":35},"generated":{"line":1,"column":895}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":119,"column":10},"generated":{"line":1,"column":898}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":119,"column":10},"generated":{"line":1,"column":904}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":119,"column":14},"generated":{"line":1,"column":908}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":119,"column":20},"generated":{"line":1,"column":914}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":132,"column":2},"generated":{"line":1,"column":958}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":132,"column":9},"generated":{"line":1,"column":960}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"set","original":{"line":132,"column":19},"generated":{"line":1,"column":970}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":132,"column":25},"generated":{"line":1,"column":974}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"index","original":{"line":132,"column":35},"generated":{"line":1,"column":983}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"value","original":{"line":132,"column":42},"generated":{"line":1,"column":985}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"defaultValue","original":{"line":132,"column":49},"generated":{"line":1,"column":987}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":134,"column":10},"generated":{"line":1,"column":990}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":134,"column":10},"generated":{"line":1,"column":996}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":134,"column":14},"generated":{"line":1,"column":1000}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":134,"column":20},"generated":{"line":1,"column":1006}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":150,"column":2},"generated":{"line":1,"column":1050}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":150,"column":9},"generated":{"line":1,"column":1052}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"resize","original":{"line":150,"column":19},"generated":{"line":1,"column":1062}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":150,"column":28},"generated":{"line":1,"column":1069}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"size","original":{"line":150,"column":38},"generated":{"line":1,"column":1078}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"defaultValue","original":{"line":150,"column":44},"generated":{"line":1,"column":1080}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":152,"column":10},"generated":{"line":1,"column":1083}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":152,"column":10},"generated":{"line":1,"column":1089}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":152,"column":14},"generated":{"line":1,"column":1093}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":152,"column":20},"generated":{"line":1,"column":1099}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":165,"column":2},"generated":{"line":1,"column":1146}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":165,"column":9},"generated":{"line":1,"column":1148}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"reshape","original":{"line":165,"column":19},"generated":{"line":1,"column":1158}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":165,"column":29},"generated":{"line":1,"column":1166}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"size","original":{"line":165,"column":39},"generated":{"line":1,"column":1175}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"defaultValue","original":{"line":165,"column":45},"generated":{"line":1,"column":1177}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":167,"column":10},"generated":{"line":1,"column":1180}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":167,"column":10},"generated":{"line":1,"column":1186}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":167,"column":14},"generated":{"line":1,"column":1190}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":167,"column":20},"generated":{"line":1,"column":1196}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":175,"column":2},"generated":{"line":1,"column":1244}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":175,"column":9},"generated":{"line":1,"column":1246}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"clone","original":{"line":175,"column":19},"generated":{"line":1,"column":1256}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":175,"column":27},"generated":{"line":1,"column":1262}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":177,"column":10},"generated":{"line":1,"column":1273}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":177,"column":10},"generated":{"line":1,"column":1279}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":177,"column":14},"generated":{"line":1,"column":1283}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":177,"column":20},"generated":{"line":1,"column":1289}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":185,"column":2},"generated":{"line":1,"column":1335}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":185,"column":9},"generated":{"line":1,"column":1337}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"size","original":{"line":185,"column":19},"generated":{"line":1,"column":1347}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":185,"column":26},"generated":{"line":1,"column":1352}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":187,"column":10},"generated":{"line":1,"column":1363}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":187,"column":10},"generated":{"line":1,"column":1369}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":187,"column":14},"generated":{"line":1,"column":1373}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":187,"column":20},"generated":{"line":1,"column":1379}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":201,"column":2},"generated":{"line":1,"column":1424}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":201,"column":9},"generated":{"line":1,"column":1426}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"map","original":{"line":201,"column":19},"generated":{"line":1,"column":1436}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":201,"column":25},"generated":{"line":1,"column":1440}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"callback","original":{"line":201,"column":35},"generated":{"line":1,"column":1449}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"skipZeros","original":{"line":201,"column":45},"generated":{"line":1,"column":1451}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":203,"column":10},"generated":{"line":1,"column":1454}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":203,"column":10},"generated":{"line":1,"column":1460}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":203,"column":14},"generated":{"line":1,"column":1464}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":203,"column":20},"generated":{"line":1,"column":1470}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":213,"column":2},"generated":{"line":1,"column":1514}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":213,"column":9},"generated":{"line":1,"column":1516}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"forEach","original":{"line":213,"column":19},"generated":{"line":1,"column":1526}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":213,"column":29},"generated":{"line":1,"column":1534}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"callback","original":{"line":213,"column":39},"generated":{"line":1,"column":1543}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":215,"column":10},"generated":{"line":1,"column":1546}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":215,"column":10},"generated":{"line":1,"column":1552}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":215,"column":14},"generated":{"line":1,"column":1556}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":215,"column":20},"generated":{"line":1,"column":1562}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":223,"column":2},"generated":{"line":1,"column":1610}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":223,"column":9},"generated":{"line":1,"column":1612}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"toArray","original":{"line":223,"column":19},"generated":{"line":1,"column":1622}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":223,"column":29},"generated":{"line":1,"column":1630}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":225,"column":10},"generated":{"line":1,"column":1641}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":225,"column":10},"generated":{"line":1,"column":1647}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":225,"column":14},"generated":{"line":1,"column":1651}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":225,"column":20},"generated":{"line":1,"column":1657}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":233,"column":2},"generated":{"line":1,"column":1705}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":233,"column":9},"generated":{"line":1,"column":1707}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"valueOf","original":{"line":233,"column":19},"generated":{"line":1,"column":1717}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":233,"column":29},"generated":{"line":1,"column":1725}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":235,"column":10},"generated":{"line":1,"column":1736}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":235,"column":10},"generated":{"line":1,"column":1742}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":235,"column":14},"generated":{"line":1,"column":1746}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":235,"column":20},"generated":{"line":1,"column":1752}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":247,"column":2},"generated":{"line":1,"column":1800}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":247,"column":9},"generated":{"line":1,"column":1802}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"format","original":{"line":247,"column":19},"generated":{"line":1,"column":1812}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":247,"column":28},"generated":{"line":1,"column":1819}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"options","original":{"line":247,"column":38},"generated":{"line":1,"column":1828}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":249,"column":10},"generated":{"line":1,"column":1831}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":249,"column":10},"generated":{"line":1,"column":1837}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":249,"column":14},"generated":{"line":1,"column":1841}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":249,"column":20},"generated":{"line":1,"column":1847}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":257,"column":2},"generated":{"line":1,"column":1894}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"prototype","original":{"line":257,"column":9},"generated":{"line":1,"column":1896}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"toString","original":{"line":257,"column":19},"generated":{"line":1,"column":1906}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":257,"column":30},"generated":{"line":1,"column":1915}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":259,"column":10},"generated":{"line":1,"column":1926}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":259,"column":10},"generated":{"line":1,"column":1932}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Error","original":{"line":259,"column":14},"generated":{"line":1,"column":1936}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":259,"column":20},"generated":{"line":1,"column":1942}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"Matrix","original":{"line":262,"column":9},"generated":{"line":1,"column":1991}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":263,"column":3},"generated":{"line":1,"column":1994}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","name":"isClass","original":{"line":264,"column":2},"generated":{"line":1,"column":1995}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":264,"column":11},"generated":{"line":1,"column":2004}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":2008}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":2016}},{"source":"node_modules/mathjs/es/type/matrix/Matrix.js","original":{"line":4,"column":7},"generated":{"line":1,"column":2034}}],"sources":{"node_modules/mathjs/es/type/matrix/Matrix.js":"import { factory } from '../../utils/factory';\nvar name = 'Matrix';\nvar dependencies = [];\nexport var createMatrixClass =\n/* #__PURE__ */\nfactory(name, dependencies, function () {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *\n   *     let matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *\n   *     let matrix = math.matrix([[1, 2], [3, 4]])\n   *     matix.size()              // [2, 2]\n   *     matrix.resize([3, 2], 5)\n   *     matrix.valueOf()          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix() {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Matrix.prototype.type = 'Matrix';\n  Matrix.prototype.isMatrix = true;\n  /**\n   * Get the Matrix storage constructor for the given format.\n   *\n   * @param {string} format       The Matrix storage format.\n   *\n   * @return {Function}           The Matrix storage constructor.\n   */\n\n  Matrix.storage = function (format) {\n    // TODO: deprecated since v6.0.0. Clean up some day\n    throw new Error('Matrix.storage is deprecated since v6.0.0. ' + 'Use the factory function math.matrix instead.');\n  };\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n\n\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface');\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n\n\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface');\n  };\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n\n\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface');\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface');\n  };\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface');\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n\n\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface');\n  };\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface');\n  };\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface');\n  };\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n\n\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface');\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n\n\n  Matrix.prototype.size = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface');\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n\n\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface');\n  };\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n\n\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface');\n  };\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n\n\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface');\n  };\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n\n\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface');\n  };\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface');\n  };\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n\n\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface');\n  };\n\n  return Matrix;\n}, {\n  isClass: true\n});"},"lineCount":null}},"error":null,"hash":"d85bc9580601e44a507e732e35ef3f4b","cacheData":{"env":{}}}