{"id":"dDUR","dependencies":[{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/package.json","includedInParent":true,"mtime":1570206157719},{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/package.json","includedInParent":true,"mtime":1570206157339},{"name":"../../../utils/factory","loc":{"line":1,"column":24},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/type/chain/function/chain.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/factory.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createChain=void 0;var e=require(\"../../../utils/factory\"),r=\"chain\",t=[\"typed\",\"Chain\"],n=(0,e.factory)(r,t,function(e){var t=e.typed,n=e.Chain;return t(r,{\"\":function(){return new n},any:function(e){return new n(e)}})});exports.createChain=n;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":0}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":35}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":43}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":56}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":57}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":64}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":68}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":76}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":93}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":1,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":1,"column":0},"generated":{"line":1,"column":109}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"name","original":{"line":2,"column":4},"generated":{"line":1,"column":135}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":2,"column":11},"generated":{"line":1,"column":137}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"dependencies","original":{"line":3,"column":4},"generated":{"line":1,"column":145}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":19},"generated":{"line":1,"column":147}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":20},"generated":{"line":1,"column":148}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":29},"generated":{"line":1,"column":156}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"createChain","original":{"line":4,"column":11},"generated":{"line":1,"column":165}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":0},"generated":{"line":1,"column":168}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":170}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":172}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":181}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"dependencies","original":{"line":6,"column":14},"generated":{"line":1,"column":183}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":28},"generated":{"line":1,"column":185}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"_ref","original":{"line":6,"column":38},"generated":{"line":1,"column":194}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"typed","original":{"line":7,"column":6},"generated":{"line":1,"column":197}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"typed","original":{"line":7,"column":6},"generated":{"line":1,"column":201}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"_ref","original":{"line":7,"column":14},"generated":{"line":1,"column":203}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"typed","original":{"line":7,"column":19},"generated":{"line":1,"column":205}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"Chain","original":{"line":8,"column":6},"generated":{"line":1,"column":211}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"_ref","original":{"line":8,"column":14},"generated":{"line":1,"column":213}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"Chain","original":{"line":8,"column":19},"generated":{"line":1,"column":215}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"typed","original":{"line":45,"column":9},"generated":{"line":1,"column":221}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"typed","original":{"line":45,"column":9},"generated":{"line":1,"column":228}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"name","original":{"line":45,"column":15},"generated":{"line":1,"column":230}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":21},"generated":{"line":1,"column":232}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":46,"column":8},"generated":{"line":1,"column":233}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":46,"column":8},"generated":{"line":1,"column":236}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":47,"column":13},"generated":{"line":1,"column":247}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":47,"column":13},"generated":{"line":1,"column":254}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"Chain","original":{"line":47,"column":17},"generated":{"line":1,"column":258}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"any","original":{"line":49,"column":4},"generated":{"line":1,"column":261}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":9},"generated":{"line":1,"column":265}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"value","original":{"line":49,"column":22},"generated":{"line":1,"column":274}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":50,"column":13},"generated":{"line":1,"column":277}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":50,"column":13},"generated":{"line":1,"column":284}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"Chain","original":{"line":50,"column":17},"generated":{"line":1,"column":288}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","name":"value","original":{"line":50,"column":23},"generated":{"line":1,"column":290}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":298}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":306}},{"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7},"generated":{"line":1,"column":318}}],"sources":{"node_modules/mathjs/es/type/chain/function/chain.js":"import { factory } from '../../../utils/factory';\nvar name = 'chain';\nvar dependencies = ['typed', 'Chain'];\nexport var createChain =\n/* #__PURE__ */\nfactory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      Chain = _ref.Chain;\n\n  /**\n   * Wrap any value in a chain, allowing to perform chained operations on\n   * the value.\n   *\n   * All methods available in the math.js library can be called upon the chain,\n   * and then will be evaluated with the value itself as first argument.\n   * The chain can be closed by executing `chain.done()`, which returns\n   * the final value.\n   *\n   * The chain has a number of special functions:\n   *\n   * - `done()`     Finalize the chain and return the chain's value.\n   * - `valueOf()`  The same as `done()`\n   * - `toString()` Executes `math.format()` onto the chain's value, returning\n   *                a string representation of the value.\n   *\n   * Syntax:\n   *\n   *    math.chain(value)\n   *\n   * Examples:\n   *\n   *     math.chain(3)\n   *         .add(4)\n   *         .subtract(2)\n   *         .done()     // 5\n   *\n   *     math.chain( [[1, 2], [3, 4]] )\n   *         .subset(math.index(0, 0), 8)\n   *         .multiply(3)\n   *         .done()     // [[24, 6], [9, 12]]\n   *\n   * @param {*} [value]   A value of any type on which to start a chained operation.\n   * @return {math.Chain} The created chain\n   */\n  return typed(name, {\n    '': function _() {\n      return new Chain();\n    },\n    any: function any(value) {\n      return new Chain(value);\n    }\n  });\n});"},"lineCount":null}},"error":null,"hash":"dffa356cb2383818b7fae9fef89aa1d7","cacheData":{"env":{}}}