{"id":"HrjI","dependencies":[{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/package.json","includedInParent":true,"mtime":1570206157719},{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/package.json","includedInParent":true,"mtime":1570206157339},{"name":"../../utils/factory","loc":{"line":1,"column":24},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/function/relational/equalText.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/factory.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createEqualText=void 0;var e=require(\"../../utils/factory\"),t=\"equalText\",r=[\"typed\",\"compareText\",\"isZero\"],a=(0,e.factory)(t,r,function(e){var r=e.typed,a=e.compareText,o=e.isZero;return r(t,{\"any, any\":function(e,t){return o(a(e,t))}})});exports.createEqualText=a;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":0}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":35}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":43}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":56}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":57}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":64}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":68}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":76}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":97}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":1,"column":0},"generated":{"line":1,"column":103}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":1,"column":0},"generated":{"line":1,"column":105}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":1,"column":0},"generated":{"line":1,"column":113}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"name","original":{"line":2,"column":4},"generated":{"line":1,"column":136}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":2,"column":11},"generated":{"line":1,"column":138}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"dependencies","original":{"line":3,"column":4},"generated":{"line":1,"column":150}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":3,"column":19},"generated":{"line":1,"column":152}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":3,"column":20},"generated":{"line":1,"column":153}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":3,"column":29},"generated":{"line":1,"column":161}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":3,"column":44},"generated":{"line":1,"column":175}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"createEqualText","original":{"line":4,"column":11},"generated":{"line":1,"column":185}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":6,"column":0},"generated":{"line":1,"column":188}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":190}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":192}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"name","original":{"line":6,"column":8},"generated":{"line":1,"column":201}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"dependencies","original":{"line":6,"column":14},"generated":{"line":1,"column":203}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":6,"column":28},"generated":{"line":1,"column":205}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"_ref","original":{"line":6,"column":38},"generated":{"line":1,"column":214}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"typed","original":{"line":7,"column":6},"generated":{"line":1,"column":217}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"typed","original":{"line":7,"column":6},"generated":{"line":1,"column":221}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"_ref","original":{"line":7,"column":14},"generated":{"line":1,"column":223}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"typed","original":{"line":7,"column":19},"generated":{"line":1,"column":225}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"compareText","original":{"line":8,"column":6},"generated":{"line":1,"column":231}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"_ref","original":{"line":8,"column":20},"generated":{"line":1,"column":233}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"compareText","original":{"line":8,"column":25},"generated":{"line":1,"column":235}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"isZero","original":{"line":9,"column":6},"generated":{"line":1,"column":247}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"_ref","original":{"line":9,"column":15},"generated":{"line":1,"column":249}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"isZero","original":{"line":9,"column":20},"generated":{"line":1,"column":251}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"typed","original":{"line":37,"column":9},"generated":{"line":1,"column":258}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"typed","original":{"line":37,"column":9},"generated":{"line":1,"column":265}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"name","original":{"line":37,"column":15},"generated":{"line":1,"column":267}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":37,"column":21},"generated":{"line":1,"column":269}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":38,"column":16},"generated":{"line":1,"column":270}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":38,"column":16},"generated":{"line":1,"column":281}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"x","original":{"line":38,"column":32},"generated":{"line":1,"column":290}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"y","original":{"line":38,"column":35},"generated":{"line":1,"column":292}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"isZero","original":{"line":39,"column":13},"generated":{"line":1,"column":295}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"isZero","original":{"line":39,"column":13},"generated":{"line":1,"column":302}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"compareText","original":{"line":39,"column":20},"generated":{"line":1,"column":304}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"x","original":{"line":39,"column":32},"generated":{"line":1,"column":306}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","name":"y","original":{"line":39,"column":35},"generated":{"line":1,"column":308}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":317}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":325}},{"source":"node_modules/mathjs/es/function/relational/equalText.js","original":{"line":4,"column":7},"generated":{"line":1,"column":341}}],"sources":{"node_modules/mathjs/es/function/relational/equalText.js":"import { factory } from '../../utils/factory';\nvar name = 'equalText';\nvar dependencies = ['typed', 'compareText', 'isZero'];\nexport var createEqualText =\n/* #__PURE__ */\nfactory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      compareText = _ref.compareText,\n      isZero = _ref.isZero;\n\n  /**\n   * Check equality of two strings. Comparison is case sensitive.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.equalText(x, y)\n   *\n   * Examples:\n   *\n   *    math.equalText('Hello', 'Hello')     // returns true\n   *    math.equalText('a', 'A')             // returns false\n   *    math.equal('2e3', '2000')            // returns true\n   *    math.equalText('2e3', '2000')        // returns false\n   *\n   *    math.equalText('B', ['A', 'B', 'C']) // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    equal, compareText, compare, compareNatural\n   *\n   * @param  {string | Array | DenseMatrix} x First string to compare\n   * @param  {string | Array | DenseMatrix} y Second string to compare\n   * @return {number | Array | DenseMatrix} Returns true if the values are equal, and false if not.\n   */\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      return isZero(compareText(x, y));\n    }\n  });\n});"},"lineCount":null}},"error":null,"hash":"2e80753f45a5e264e560871642c06ca0","cacheData":{"env":{}}}