{"id":"MFKn","dependencies":[{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/package.json","includedInParent":true,"mtime":1570206157719},{"name":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/package.json","includedInParent":true,"mtime":1570206157339},{"name":"../../utils/collection","loc":{"line":1,"column":24},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/expression/function/compile.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/collection.js"},{"name":"../../utils/factory","loc":{"line":2,"column":24},"parent":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/expression/function/compile.js","resolved":"/home/manu/Escritorio/tfjs_projects/fuel-prediction-tfjs/node_modules/mathjs/es/utils/factory.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createCompile=void 0;var e=require(\"../../utils/collection\"),r=require(\"../../utils/factory\"),t=\"compile\",i=[\"typed\",\"parse\"],o=(0,r.factory)(t,i,function(r){var i=r.typed,o=r.parse;return i(t,{string:function(e){return o(e).compile()},\"Array | Matrix\":function(r){return(0,e.deepMap)(r,function(e){return o(e).compile()})}})});exports.createCompile=o;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":0}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":35}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":43}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":56}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":57}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":64}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":68}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":76}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":95}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":103}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":111}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":2,"column":0},"generated":{"line":1,"column":137}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":2,"column":0},"generated":{"line":1,"column":139}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":2,"column":0},"generated":{"line":1,"column":147}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"name","original":{"line":3,"column":4},"generated":{"line":1,"column":170}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":3,"column":11},"generated":{"line":1,"column":172}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"dependencies","original":{"line":4,"column":4},"generated":{"line":1,"column":182}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":4,"column":19},"generated":{"line":1,"column":184}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":4,"column":20},"generated":{"line":1,"column":185}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":4,"column":29},"generated":{"line":1,"column":193}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"createCompile","original":{"line":5,"column":11},"generated":{"line":1,"column":202}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":205}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"name","original":{"line":7,"column":8},"generated":{"line":1,"column":207}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"name","original":{"line":7,"column":8},"generated":{"line":1,"column":209}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"name","original":{"line":7,"column":8},"generated":{"line":1,"column":218}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"dependencies","original":{"line":7,"column":14},"generated":{"line":1,"column":220}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":7,"column":28},"generated":{"line":1,"column":222}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"_ref","original":{"line":7,"column":38},"generated":{"line":1,"column":231}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"typed","original":{"line":8,"column":6},"generated":{"line":1,"column":234}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"typed","original":{"line":8,"column":6},"generated":{"line":1,"column":238}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"_ref","original":{"line":8,"column":14},"generated":{"line":1,"column":240}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"typed","original":{"line":8,"column":19},"generated":{"line":1,"column":242}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"parse","original":{"line":9,"column":6},"generated":{"line":1,"column":248}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"_ref","original":{"line":9,"column":14},"generated":{"line":1,"column":250}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"parse","original":{"line":9,"column":19},"generated":{"line":1,"column":252}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"typed","original":{"line":45,"column":9},"generated":{"line":1,"column":258}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"typed","original":{"line":45,"column":9},"generated":{"line":1,"column":265}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"name","original":{"line":45,"column":15},"generated":{"line":1,"column":267}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":45,"column":21},"generated":{"line":1,"column":269}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"string","original":{"line":46,"column":4},"generated":{"line":1,"column":270}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":46,"column":12},"generated":{"line":1,"column":277}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"expr","original":{"line":46,"column":28},"generated":{"line":1,"column":286}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"parse","original":{"line":47,"column":13},"generated":{"line":1,"column":289}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"parse","original":{"line":47,"column":13},"generated":{"line":1,"column":296}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"expr","original":{"line":47,"column":19},"generated":{"line":1,"column":298}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"compile","original":{"line":47,"column":25},"generated":{"line":1,"column":301}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":49,"column":22},"generated":{"line":1,"column":312}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":49,"column":22},"generated":{"line":1,"column":329}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"expr","original":{"line":49,"column":43},"generated":{"line":1,"column":338}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":50,"column":13},"generated":{"line":1,"column":341}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":50,"column":13},"generated":{"line":1,"column":348}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"expr","original":{"line":50,"column":21},"generated":{"line":1,"column":350}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"expr","original":{"line":50,"column":21},"generated":{"line":1,"column":352}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"expr","original":{"line":50,"column":21},"generated":{"line":1,"column":361}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":50,"column":27},"generated":{"line":1,"column":363}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"entry","original":{"line":50,"column":37},"generated":{"line":1,"column":372}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"parse","original":{"line":51,"column":15},"generated":{"line":1,"column":375}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"parse","original":{"line":51,"column":15},"generated":{"line":1,"column":382}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"entry","original":{"line":51,"column":21},"generated":{"line":1,"column":384}},{"source":"node_modules/mathjs/es/expression/function/compile.js","name":"compile","original":{"line":51,"column":28},"generated":{"line":1,"column":387}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":404}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":412}},{"source":"node_modules/mathjs/es/expression/function/compile.js","original":{"line":5,"column":7},"generated":{"line":1,"column":426}}],"sources":{"node_modules/mathjs/es/expression/function/compile.js":"import { deepMap } from '../../utils/collection';\nimport { factory } from '../../utils/factory';\nvar name = 'compile';\nvar dependencies = ['typed', 'parse'];\nexport var createCompile =\n/* #__PURE__ */\nfactory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      parse = _ref.parse;\n\n  /**\n   * Parse and compile an expression.\n   * Returns a an object with a function `evaluate([scope])` to evaluate the\n   * compiled expression.\n   *\n   * Syntax:\n   *\n   *     math.compile(expr)                       // returns one node\n   *     math.compile([expr1, expr2, expr3, ...]) // returns an array with nodes\n   *\n   * Examples:\n   *\n   *     const code1 = math.compile('sqrt(3^2 + 4^2)')\n   *     code1.evaluate() // 5\n   *\n   *     let scope = {a: 3, b: 4}\n   *     const code2 = math.compile('a * b') // 12\n   *     code2.evaluate(scope) // 12\n   *     scope.a = 5\n   *     code2.evaluate(scope) // 20\n   *\n   *     const nodes = math.compile(['a = 3', 'b = 4', 'a * b'])\n   *     nodes[2].evaluate() // 12\n   *\n   * See also:\n   *\n   *    parse, evaluate\n   *\n   * @param {string | string[] | Array | Matrix} expr\n   *            The expression to be compiled\n   * @return {{evaluate: Function} | Array.<{evaluate: Function}>} code\n   *            An object with the compiled expression\n   * @throws {Error}\n   */\n  return typed(name, {\n    string: function string(expr) {\n      return parse(expr).compile();\n    },\n    'Array | Matrix': function ArrayMatrix(expr) {\n      return deepMap(expr, function (entry) {\n        return parse(entry).compile();\n      });\n    }\n  });\n});"},"lineCount":null}},"error":null,"hash":"307435afc90d3938640f09315409abb8","cacheData":{"env":{}}}